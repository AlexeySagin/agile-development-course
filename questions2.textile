---
layout: post
---

h1. Летучки

h3. Советы

# Не забываем про цель спецкурса, это поможет найти ответы на многие вопросы. (прежде всего имеются в виду изменяющиеся требования)
# Отвечая на вопрос, рекомендуется приводить в пример реальные системы (и желательно не из лекций). Паттерны, принципы нужно иллюстрировать.
# Рекомендуется писать своими словами, но быть аккуратнее.

h2. 2012

h3. 1. Introduction to Agile

# Манифест ГТР
# Определение ГТР
# Факторы, противодействующие внедрению ГТР

English

# Agile Manifesto
# Definition of Agile Development methodologies
# Factors (obstacles), that may prevent you from using Agile practices

Дополнительные вопросы

* Основные черты гибких методологий разработки
* Какие факторы повлияли на содержание первых методологий разработки
* Достоинства и недостатки каскадной модели

h3. 2. Clean Code

# Ключевые понятия при разговоре о качестве кода, их использование.
# Основные правила оформления функций.
# Почему важно поддерживать код в чистоте.

English

# Key terms for talking about the quality of the code, and their meaning and usage.
# Major rules for formatting/structuring functions.
# Why it is important, to keep the code clean?

Дополнительные вопросы

* Основные правила именования.
* Недостатки использования комментариев.
* Техника безопасности.

h3. 3. Clean Code / Refactoring

# Примеры неправильного использования комментариев.
# Определение рефакторинга и его цели.
# Примеры запахов и способы их устранения (3-5 примеров).

English

# Examples of wrong usage of comments.
# Definition of refactoring and its purpose.
# Code smell examples, ways to resolve them (3-5 examples).

h3. 4. Scrum

# Жизненный цикл спринта.
# Роли в Scrum, их основные ответственности.
# Product и Sprint backlog, что это такое и основные правила работы с ними.

English

# Sprint lifecycle.
# Scrum roles, their responsibilities.
# Product and Sprint backlog, what it is and major rules.

Дополнительные вопросы

* Жизненный цикл Scrum.
* Артефакты в Scrum, правила работы с ними.
* Основные практики Scrum.
* Daily Scrum / Stand-up meeting: назначение, правила проведения.

h3. 5. Test-Driven Develoment

# Мифы про TDD
# Цикл разработки по TDD
# Атрибуты хорошего unit-теста

English

# Myths about TDD
# TDD development cycle
# Attributes of a good unit-test

Дополнительные вопросы

* Что такое TDD, его назначение

h3. 6. XP

# Практики XP
# Парное программирование (роли, ответственности, преимущества)
# Внедрение XP (алгоритм, важные моменты которые нужно учитывать)

English

# XP practices
# Pair programming (roles, responsibities, advantages)
# Introducing XP (algorithm, important rules to remember)

Дополнительные вопросы

* Ценности XP (на всех уровнях)
* Метафора: назначение практики, примеры

h3. 7. SOLID

# SRP
# OCP
# DIP

Дополнительные вопросы

* LSP
* ISP
* Закон Деметера (что можно, чего нельзя)

План ответа:

# Формулировка, раскрыть все слова названия.
# Как достигается.
# Последствия нарушения.

h3. 8. MVP and MVVM

1. Типичные проблемы с GUI.
2. Диаграмма Passive View. Ответственности слоев в Passive View.
3. Назначение и преимущества применения Passive View (ну или MVVM)

English

1. Common issues with GUI.
2. Passive View diagram. Responsibilities of layers in Passive View.
3. Purpose of Passive View, its advantages (or MVVM)

Дополнительные вопросы

* Популярные паттерны при построении UI.
* Диаграмма MVVM. Ответственности слоев.

h3. 9. Domain-Driven Design

# Понятие Domain, Model. Назначение DDD.
# Необходимые условия для применения DDD.
# Нарисовать диаграмму DDD ("улучшенная" слоистая архитектура).
# Назначение сборки Application.
# Назначение Infrastructure, способ стыковки с Domain.


h2. Предыдущие года

* "Летучки 2011":questions_2011.html
* "Летучки 2010":questions_2010.html
