Content-Type: multipart/related; start=<op.mhtml.1160567614826.c8dca248235dc564@10.0.16.52>; boundary=----------XgoCLl6DMTLuPXdwO56uVX
Content-Location: http://www.maxkir.com/sd/pairprog_RUS.htm
Subject: =?utf-8?Q?=D0=9F=D0=B0=D1=80=D0=BD=D0=BE=D0=B5=20=D0=BF=D1=80=D0=BE=D0=B3=D1=80=D0=B0=D0=BC=D0=BC=D0=B8=D1=80=D0=BE=D0=B2=D0=B0=D0=BD=D0=B8=D0=B5:=20=D0=BF=D1=80=D0=B5=D0=B8=D0=BC=D1=83=D1=89=D0=B5=D1=81=D1=82=D0=B2=D0=B0=20=D0=B8=20=D0=BD=D0=B5=D0=B4=D0=BE=D1=81=D1=82=D0=B0=D1=82=D0=BA=D0=B8?=
MIME-Version: 1.0

------------XgoCLl6DMTLuPXdwO56uVX
Content-Disposition: inline; filename=pairprog_RUS.htm
Content-Type: text/html; name=pairprog_RUS.htm
Content-Id: <op.mhtml.1160567614826.c8dca248235dc564@10.0.16.52>
Content-Location: http://www.maxkir.com/sd/pairprog_RUS.htm
Content-Transfer-Encoding: 8bit

<HTML>
<HEAD>
   <title>Парное программирование: преимущества и недостатки</title>
	<meta name="Keywords" content="XP, eXtreme Programming, Xtream Programming, практики экстремального программирования, парное программирование, pair programming, programming in pairs, программирование вдвоем, программирование в парах, Коуберн, Алистэр Коуберн, Cockburn, Alistair Cockburn, экстремальное программирование, программирование, разработка ПО, методологии, refactoring, рефакторинг, дизайн, проектирование, тестирование, ПО, процесс, итерация, итеративность, адаптивные, адаптивность, требования, анализ, документация, software">
</HEAD>
<BODY LINK="#0000ff" VLINK="#800080">

<B><FONT SIZE=5><P ALIGN="CENTER">Парное программирование: преимущества и недостатки
</B>
</FONT><B><P ALIGN="CENTER">Алистэр Коуберн</P>
</B><P ALIGN="CENTER">Humans and Technology<BR>
7691 Dell Rd<BR>
Salt Lake City, UT 84121, USA<BR>
<A HREF="mailto:arc@acm.org">arc@acm.org</A> 801.947.9277</P>
<B><P ALIGN="CENTER">Лори Вильямс</P>
</B><P ALIGN="CENTER">University of Utah Computer Science<BR>
50 S. Central Campus #3190<BR>
Salt Lake City, UT 84112, USA<BR>
<A HREF="mailto:lwilliam@cs.utah.edu">lwilliam@cs.utah.edu</A> 435.649.7931</P>
Original text at: <A HREF="http://members.aol.com/humansandt/papers/pairprogrammingcostbene/pairprogrammingcostbene.htm">http://members.aol.com/humansandt/papers/pairprogrammingcostbene/pairprogrammingcostbene.htm</A>
<I><P ALIGN="JUSTIFY">"Только в том случае, когда различные элементы - имена, определения, намеки и ощущения - тщательно проверяются и подгоняются друг к другу, причем доброжелательно, без неприязни во время обсуждения, только тогда воссияют понимание и здравомыслие - наивысшая цель, которую может поставить перед собой человек..."&#9;- Платон</P>
<P ALIGN="JUSTIFY">"Как правило, знание создается общими усилиями, благодаря слаженным действиям группы людей, направленным на достижение общей цели, или же благодаря тем проблемам и диалогам, которые порождаются различием их точек зрения." - Габриэль Саломон &#9;</P>
</I><B><P ALIGN="JUSTIFY">Краткое содержание</P>
</B><P ALIGN="JUSTIFY">
Парное, или совместное, программирование является процессом создания программного обеспечения двумя программистами, работающими бок о бок за одним компьютером. С помощью опросов и специальных экспериментов авторы этой статьи исследовали положительные и отрицательные стороны такого стиля работы.
Они обнаружили, что при парном программировании время разработки увеличивается на 15%, но при этом улучшается дизайн системы, уменьшается количество дефектов, снижается риск, связанный с занятостью в проекте определенных сотрудников, растет технический уровень команды, улучшается взаимодействие и коммуникация, <i>а кроме того</i>, сам процесс работы в целом доставляет гораздо больше удовольствия.
</P>
<OL>
<B><P ALIGN="JUSTIFY"><LI>Введение</LI></P>

</B><P ALIGN="JUSTIFY">При парном программировании разработчики решают все задачи совместными усилиями, работая бок о бок за одним компьютером. За последние несколько десятков лет такая практика уже неоднократно получала самые лестные отзывы, так как с ее помощью удавалось значительно улучшить процесс разработки ПО.
</P>
<P ALIGN="JUSTIFY">Однако существует мнение, сводящее на нет любые доводы в пользу парного программирования - многие полагают, что посадить двух программистов за один компьютер, значит поручить двум разработчикам работу одного.
</P>

<UL>
<P ALIGN="JUSTIFY"><LI> С точки зрения руководителя, программист - слишком ценный ресурс, поэтому он не желает тратить его понапрасну, удваивая количество людей, необходимых для разработки той или иной задачи. 
</LI></P>
<P ALIGN="JUSTIFY"><LI>Программисты привыкли считать свою работу индивидуальным, а не коллективным трудом (это убеждение основано как на навыках, которые они получали в процессе обучения, так и на опыте работы).</LI></P>
<P ALIGN="JUSTIFY"><LI>Многие опытные программисты отказываются работать в паре. Некоторые мотивируют это тем, что их код "слишком индивидуален", другие утверждают, что напарник будет тормозить их работу, третьи говорят, что в таком случае будет очень трудно координировать рабочее время или версии кода. 
</LI></P></UL>

<P ALIGN="JUSTIFY">И в то же время:</P>

<UL>
<P ALIGN="JUSTIFY"><LI>Довольно много известных и уважаемых программистов предпочитают парное программирование любому другому стилю работы.</LI></P>
<P ALIGN="JUSTIFY"><LI>Те программисты, которые уже привыкли к "парному" стилю работы, говорят, что так работается "как минимум, вдвое быстрее".</LI></P>
<P ALIGN="JUSTIFY"><LI>Что касается качества программы, то опыт показывает, что при парном программировании система имеет лучший дизайн и более простой код, который в будущем можно легко расширять и модифицировать.
</LI></P>
<P ALIGN="JUSTIFY"><LI>Согласно опросам, даже новички-программисты, работающие в паре с опытным специалистом, вносят в его код много полезных дополнений.</LI></P></UL>

<P ALIGN="JUSTIFY">Все это поднимает несколько довольно провокационных вопросов. Действительно ли парное программирование эффективнее одиночного? Что оно представляет собой в экономическом плане? И, наконец, нравится ли людям работать в паре? Не теряют ли они удовольствие от работы?
</P>
<P ALIGN="JUSTIFY">Основываясь на растущем интересе к парному программированию, авторы данной статьи провели несколько опросов и экспериментов, чтобы собрать материал, по которому можно было бы судить об издержках и выгодах, которые несет с собой эта практика. В этой статье мы приводим результаты этого исследования. В прежних публикациях уже говорилось, что парное программирование положительно сказывается на процессе разработки ПО. Цель нашей статьи - перепроверить результаты прежних исследований в этой области и более подробно объяснить, чем же выгодно парное программирование.</P>



<B><P ALIGN="JUSTIFY"><LI>Пример использования парного программирования в одном из проектов</LI></P>
</B><P ALIGN="JUSTIFY">Ниже мы приводим цитату из рассказа опытного программиста о том, как его компания впервые попробовала использовать парное программирование. В этом примере упомянуто много основных черт парного программирования, которые мы рассмотрим в этой статье более подробно.</P>
<FONT FACE="Arial" SIZE=2><P ALIGN="JUSTIFY">В начале декабря моя команда занялась довольно рискованной деятельностью. Эта деятельность включала в себя внесение изменений практически в каждый файл и слияние фрагментов кода. При всем при этом надо было ничего не сломать. Дальше больше - в архитектуру одной из подсистем потребовалось внести довольно существенные изменения. Итак, с одной стороны, эта работа представляла собой скучнейшую рутину, а с другой - требовала постоянного внимания и напряженной работы мысли.</P>
<P ALIGN="JUSTIFY">Разработчики согласились со мной в том, что парное программирование:</P>
<P ALIGN="JUSTIFY">- Должно существенно уменьшить риск появления скрытых ошибок, а значит сделать отладку программы менее мучительным процессом;
</P>
<P ALIGN="JUSTIFY">- Даст нам возможность провести гораздо более полную проверку кода, чем мы когда-либо делали; а кроме того 
</P>
<P ALIGN="JUSTIFY">- Предоставит программистам возможность обмениваться знаниями.</P>
<P ALIGN="JUSTIFY">
Первые несколько недель работа шла совсем не так, как мы того ожидали. Вместо парного программирования 
люди начали работать в режиме, который я называю "партнерским программированием". Каждый сам писал свой код, а потом проверял его вместе со своим партнером перед внесением изменений в общий репозиторий. По их словам, благодаря этому они стали находить ошибки на ранних стадиях работы. Звучало обнадеживающе, но я все равно был разочарован тем, что они не работают все время вместе.</P>
<P ALIGN="JUSTIFY">Приблизительно через четыре месяца я стал замечать некоторые изменения. Одна пара разработчиков весь день работала всместе - это было настоящее парное программирование. Другие две пары тоже были близки к этому идеалу. В процессе обсуждения стало ясно, почему изменения в процессе все-таки произошли. Так было удобнее работать!
</P>
<P ALIGN="JUSTIFY">Программисты обнаружили, что работать независимо, а потом проверять код занимает больше времени, поскольку в процессе проверки приходится обучать партнера всему тому, что узнал сам, пока вносил изменения. Обучение это отнимало почти столько же времени, сколько уходило на внесение изменений. Когда программисты работали вдвоем, им не нужно было делать "двойную работу", процесс кодирования шел быстрее благодаря известному принципу "одна голова хорошо, а две лучше", и разработчики были значительно более уверены в качестве конечного результата.</P>
<P ALIGN="JUSTIFY"> Наконец, мы подготовили промежуточную версию системы и отдали ее в отдел контроля качества (QA). К нашему удивлению, процесс тестирования прошел без сучка без задоринки. Это было тем более удивительно, что одну из подсистем некоторое время назад целых шесть (!) недель мучили в отделе QA. Было совершенно очевидно, что парное программирование коренным образом уменьшило количество дефектов в системе.</P>
<P ALIGN="JUSTIFY">С течением времени сотрудничество программистов становилось все более тесным.</P>
<P ALIGN="JUSTIFY">... Когда работа над каждой из подсистем заканчивалась, пары перегруппировывались, в зависимости от навыков, требуемых для решения следующей задачи. Это несколько замедляло работу, так как новым парам требовалось время, чтобы сработаться, прежде чем они начинали трудиться с прежней эффективностью. К августу пары сработались уже настолько, что один из партнеров мог запросто выражать их общее мнение на собраниях, проходивших у нас два раза в неделю.</P>
<P ALIGN="JUSTIFY">Последующие релизы, как внутренние, так и внешние, проходили достаточно гладко. критические ошибки обнаружиливались в системе исключительно редко. Благодаря непрерывной проверке кода мы выявили большую часть серьезных проблем, в том числе незамеченные ранее существенные недоработки в дизайне системы.</P>
<P ALIGN="JUSTIFY">Сам я начал работать в паре только к концу проекта. Как только моему партнеру и мне удалось синхронизировать наши мысли, я понял, как замечательно работать вдвоем.</P>
<P ALIGN="JUSTIFY">И хотя ему не хватало опыта, он умел так сформулировать вопрос, что подыскивая ответ, мы, как правило, находили оптимальное решение для каждой проблемы.</P>
<P ALIGN="JUSTIFY">... После этого разработчики сами решили использовать практику парного программирования и в дальнейшем. Никакие указания свыше не сравнятся с личным опытом. </P>

</FONT><B><P ALIGN="JUSTIFY"><LI>Направления исследования</LI></P>
</B><P ALIGN="JUSTIFY">Мы рассмотрим здесь восемь направлений исследования, связанных с программированием и организационной эффективностью. Удивительно, но все они свидетельствуют в пользу парного программирования. Итак, мы вели наши исследовали в следующих направлениях:
</P>
<I><P ALIGN="JUSTIFY">Экономическая обоснованность.</I> Недавние эксперименты показали, что стоимость разработок при добавлении второго программиста возрастает совсем немного. Однако в этом случае программный код будет иметь гораздо меньше дефектов. Таким образом, изначальные затраты с лихвой компенсируются экономией на исправлении ошибок.</P>
<P ALIGN="JUSTIFY"><I>Удовлетворение от работы.</I> Те разработчики, которые пробовали программировать вдвоем, считают, что так работать гораздо приятнее, чем в одиночку.</P>
<I><P ALIGN="JUSTIFY">Качество дизайна системы.</I> Исследования показали, что программисты, работавшие попарно, выпускали более короткие программы, нежели их коллеги, которые работали в одиночку (а как известно, чем короче программа, тем лучше ее дизайн). Об этом же свидетельствуют и личные впечатления разработчиков.</P>
<I><P ALIGN="JUSTIFY">Непрерывность проверки кода</I>. При парном программировании происходит постоянная проверка как кода, так и дизайна системы, что ведет к существенному снижению коэффициента ошибок. </P>
<I><P ALIGN="JUSTIFY">Решение проблем. </I>Все опрошенные нами программисты подчеркивали, что при парном программировании возрастает способность команды быстро находить выход в "безвыходных" ситуациях.</P>
<I><P ALIGN="JUSTIFY">Обучение. </I>Работающие в парах программисты утверждают, что многому учатся друг у друга.<I>. </P>
<P ALIGN="JUSTIFY">Формирование команды и коммуникации.</I> Опрошенные нами программисты говорят, что с помощью парного программирования разработчики в их командах учатся обсуждать проблемы и решать их совместными усилиями. Это улучшает и качество общения людей, и эффективность их работы.
</P>
<I><P ALIGN="JUSTIFY">Персонал и управление проектом</I>. Когда каждый фрагмент кода хорошо знаком не одному разработчику, а сразу многим, это снижает риск, связанный с изменениями в персонале компании.</P>
<P ALIGN="JUSTIFY">Далее мы рассмотрим каждый из восьми пунктов более подробно, с привлечением статистических данных и информации, полученной в результате многочисленных опросов и интервью. Все это позволит более точно определить затраты, которые требует парное программирование, и выгоды, которые оно приносит.</P>


<B><P ALIGN="JUSTIFY"><LI>Экономическая обоснованность</LI></P>
</B><P ALIGN="JUSTIFY">Ключевой вопрос, возникающий при обсуждении целесообразности перехода на парное программирование - это затраты, которых оно потребует. Если методика требует слишком больших расходов, то никакой руководитель компании просто не станет ее вводить. Скептики полагают, что переход на парное программирование влечет за собой удвоение расходов на разработку программы и персонал. Однако, помимо этих затрат существуют и другие виды расходов, которые тоже необходимо учитывать: контроль качества и поддержка уже находящегося в эксплуатации продукта. Так, IBM сообщает, что они потратили около 250 миллионов долларов только на устранение 30 000 проблем, о которых заявили их клиенты. Итого, по 8 000 долларов за каждую ошибку!
</P>
<P ALIGN="JUSTIFY">В 1999 году второй автор этой статьи (Лори Вильямс) провел в университете Юта эксперимент по выяснению экономических аспектов парного программирования. В нем участвовали студенты старших курсов, обучавшихся по специальности "Software Engineering". Треть группы писала программы обычным способом - то есть, в одиночку. Остальные работали над проектом в паре с партнером. На рисунке 1 вы видите, сколько времени затратили на выполнение заданий первая и вторая группы студентов. После начального периода "притирки" партнеров, которая проходила во время работы над первой программой, пары программистов тратили всего на 15% больше времени, чем индивидуалы. Как видите, парное программирование отнюдь не удваивает стоимость разработки!</P>
<P ALIGN="JUSTIFY"><IMG SRC="img/Image640.gif" WIDTH=320 HEIGHT=197></P>
<P ALIGN="JUSTIFY">Рисунок 1: Время, затраченное на выполнение контрольных заданий</P>
<P ALIGN="JUSTIFY">Важно отметить, что получившийся в результате парного программирования код содержал на 15% меньше ошибок, чем код индивидуалов. (Эти результаты подтверждены статистикой.) На рисунке 2 показано, с каким успехом проходили тестирование программы, написанные студентами обеих групп (иными словами, процент успешно пройденных тестов, которые писал инструктор). 
</P>
<P ALIGN="JUSTIFY"><IMG SRC="img/Image650.gif" WIDTH=320 HEIGHT=197></P>
<P ALIGN="JUSTIFY">Рисунок 2: Ошибки в программах</P>
<P ALIGN="JUSTIFY">Изначальное 15% увеличение стоимости разработки окупается за счет уменьшения количества ошибок. Проиллюстрируем это положение наглядным примером. Предположим, что программа в 50 000 строк кода (50 000 LOC) разрабатывается группой программистов-"одиночек" и группой программистов, работающих в парах. При типичной скорости разработки 50 LOC в час "одиночки" напишут эту программу за 1000 часов. "Пары" затратят на ту же задачу на 15% больше, то есть 1150 часов. Таким образом, стоимость разработки вырастает на 150 часов. Основываясь на статистических данных, программист совершает 100 ошибок на 1000 строк кода. Правильно поставленный процесс разработки позволяет выявить около 70% этих ошибок. Следовательно, у "одиночек" в программе останется порядка 1500 ошибок, в то время как у "пар" их будет на 15% (на 225) меньше - 1275 ошибок.
 </P>
<P ALIGN="JUSTIFY">В некоторых компаниях программный код передается в отдел тестирования или контроля качества, который находит и исправляет существенную часть оставшихся в программе ошибок. Обычно при проведении системных тестов на одну ошибку уходит от четырех до шестнадцати часов. Возьмем нечто среднее - 10 часов, тогда получится, что на исправление этих "лишних" 225 ошибок отдел тестирования потратит около 2250 часов. А это в 15 раз больше, чем изначальное увеличение затрат на парное программирование - 150 часов!
</P>
<P ALIGN="JUSTIFY">Если же по окончанию работ программа отправляется непосредственно заказчику, то парное программирование оказывается еще более выгодным. По данным статистики, после выхода программы в эксплуатацию на исправление одной ошибки уходит от 33 до 88 часов. Возьмем оптимистичный вариант - по 40 часов на ошибку, тогда если клиет обнаружит 225 дополнительных ошибок, это будет стоить компании-разработчику 9 000 часов - в 60 раз больше, чем те затраты, которые требовались при использовании парного программирования!
</P>
<P ALIGN="JUSTIFY">Таким образом, даже если судить только с экономической точки зрения, парное программирование вполне себя оправдывает. Впрочем, есть и другие аспекты, на которые стоит обратить внимание.</P>


<B><P ALIGN="JUSTIFY"><LI>Удовлетворение от работы</LI></P>


</B><P ALIGN="JUSTIFY">Если парное программирование не будет доставлять удовольствие, то программисты не будут его использовать.
</P>
<P ALIGN="JUSTIFY">Изначально многие разработчики настроены по отношению к парному программированию скептически, даже враждебно. Дело в том, что работа с партнером меняет условия работы программиста-одиночки, к которым он так привык. Один программист написал:</P>
<FONT FACE="Arial" SIZE=2><P ALIGN="JUSTIFY">"Перестроиться с одиночного программирования на парное - все равно, что приучить себя к острой пище. Когда вы в первый раз пробуете ее, она кажется совершенно отвратительной, потому что вы просто к ней не привыкли. Но чем больше вы будете есть острого, тем вкуснее оно вам покажется."
</P>
</FONT><P ALIGN="JUSTIFY">Согласно статистике, программисты, которые ранее работали в одиночку, а теперь работают в парах, считают, что им больше нравится новый способ работы. Одной из причин они называют возросшую уверенность в качестве своего кода (коэффицент ошибок в том и другом случае подтверждает последнее замечание). На рисунке 3 вы видите результаты анонимного исследования, проведенного в университете Юта среди профессиональных программистов и студентов. Как видите, большинству программистов совместный стиль работы нравится больше.
</P>
<P ALIGN="JUSTIFY"><IMG SRC="img/Image660.gif" WIDTH=332 HEIGHT=205></p>
<p>Рисунок 3: Удовлетворение от работы</P>
<P ALIGN="JUSTIFY">Как заметил один из программистов, </P>
<FONT FACE="Arial" SIZE=2><P ALIGN="JUSTIFY">"С психологической точки зрения, очень приятно осознавать, что в твоей программе нет серьезных ошибок... Я чувствую себя гораздо увереннее, когда мой партнер просматривает весь код, который я пишу. В этом случае, я могу быть уверен, что делаю свою работу хорошо, ведь ее проверяет и одобряет человек, с которым я работаю и кому доверяю."</P>
</FONT><P ALIGN="JUSTIFY">На эту тему есть еще один замечательный комментарий : </P>
<FONT FACE="Arial" SIZE=2><P ALIGN="JUSTIFY">"Так здорово вместе радоваться, когда что-то работает."
</P>
</FONT><I><P ALIGN="JUSTIFY">Студенты предпочитают иметь 15%-ные издержки//работать больше, но с партнером</P>
</I><P ALIGN="JUSTIFY">Мы уже рассказывали, что для предыдущего эксперимента поделили всю группу студентов на две части: группу "индивидуалов", в которой каждый писал код в одиночку, и группу "коллективистов", где все программисты работали попарно. Каждое задание состояло из одной программы для "индивидуалов" и двух - для "коллективистов".
</P>
<P ALIGN="JUSTIFY">После выполнения нескольких заданий двое программистов, работавших в паре, стали жаловаться, что дескать, задания назначаются несправедливо: "парам" приходится работать больше, чем "одиночкам". Инструктор тут же предложил этим студентам перейти в группу "индивидуалов" и работать по одному, но оба даже слышать об этом не хотели. Больше никаких жалоб на "несправедливость" от них не поступало.</P>
<P ALIGN="JUSTIFY">Нам кажется, что такое поведение свидетельствует о том, что разработчикам нравится работать вдвоем.</P>
<B><P ALIGN="JUSTIFY"><LI>Качество дизайна системы</LI></P>
</B><P ALIGN="JUSTIFY">Ниже мы приводим слова руководителя одной из команд разработчиков, который и слыхом не слыхал о парном программировании. Здесь он объясняет, почему все его проектировщики-программисты работают вместе за одним терминалом.
</P>
<FONT FACE="Arial" SIZE=2><P ALIGN="JUSTIFY">Во время работы над проектом я заметил, что одна из наших команд всегда разрабатывает дизайн более высокого качества. Я спросил у ребят, как это им удается. </P>
<P ALIGN="JUSTIFY">Они сказали, что это происходит потому, что они стали работать вместе - как над дизайном программы, так и над его реализацией в коде. В результате, и дизайн, и код становятся лучше. Я согласился с ними и перевел все остальные команды на тот же стиль работы. Теперь качество дизайна стало намного лучше.</P>
<P ALIGN="RIGHT">&#9;[из архивов Алистэра Коуберна]</P>
</FONT><P ALIGN="JUSTIFY">В 1991 году Ник Флор (Nick Flor), занимавшийся в то время когнитологией (Cognitive Science), сделал интересный вывод о распределенности знаний у программистов, работавших в паре, которых он изучал. Распределенное знание - это один из разделов когнитологии, основное положение которого можно выразить словами: "Все, кому приходилось изучать процесс осмысления, были поражены тем фактом, что "разум" очень редко работает в одиночку. Вся данные, которые человек поднимает во время этого процесса, оказываются распределенными - по различным умам, людям, а также символическому и физическому окружению, в котором этот человек находится."
</P>
<P ALIGN="JUSTIFY">С помощью видео и аудио аппаратуры Флор фиксировал все виды обмена мнениями между двумя программистами, которые работали над одной задачей. В этом исследовании Флор установил соотношения между вербальным и невербальным поведением программистов. Для этого он использовал известные когнитологические теории, касающиеся распределенного знания. Одна из таких теорий - "Поиск в более обширном пространстве возможностей" ("Searching Through Larger Spaces of Alternatives.") </P>
<FONT FACE="Arial" SIZE=2><P ALIGN="JUSTIFY">"С точки зрения генерации разнообразных планов, система со многими действующими лицами обладает большим потенциалом. Можно назвать, по крайней мере, три причины: во-первых, все действующие лица привносят в разработку свой уникальный личный опыт; во-вторых, каждый из них обладает своим подходом к информации, касающейся выполняемой задачи; в-третьих, все они находятся в разных отношениях к проблеме, поскольку выполняют разные функциональные роли... Главным следствием попытки свести воедино все имеющиеся цели и планы является то, что в такой конфликтной, по сути, ситуации программисты должны открыто договориться, какую последовательность действий необходимо будет предпринять. Вырабатывая, таким образом, единое общее решение, они перебирают гораздо большее количество альтернативных вариантов, чем мог бы в такой ситуации программист-одиночка. Именно это обстоятельство и ведет к снижению риска выбора плохого плана действий."
</P>
</FONT><P ALIGN="JUSTIFY">Посмотрите, что говорит программист, работающий в паре с партнером, и как это совпадает с тем, что мы прочли у Флора:</P>
<FONT FACE="Arial" SIZE=2><P ALIGN="JUSTIFY">Часто все мы имели разные идеи относительно того, как должен выглядеть дизайн системы. Как правило, пока мы спорили, какой из вариантов лучше, мы действительно приходили  к самому лучшему решению, которое являлось гибридом всех предложенных вначале.
</P>
</FONT><P ALIGN="JUSTIFY">Во время количественных исследований, проведенных в университете Юта, работающие попарно программисты не только разрабатывали программы высокого качества, но и реализовывали необходимую функциональность в меньшем количестве строк кода, чем программисты-одиночки. Более подробно эти данные представлены на рисунке 4. Нам кажется, что краткость программного кода свидетельствует о более качественном дизайне всей системы.</P>
<P ALIGN="JUSTIFY"><IMG SRC="img/Image670.gif" WIDTH=330 HEIGHT=202>
<P>Рисунок 4: Количество строк кода </P>
<B><P ALIGN="JUSTIFY"><LI>Непрерывность проверки кода</P>

</B><P ALIGN="JUSTIFY">Уже двадцать лет тому назад было установлено, что визуальная проверка кода - это эффективный, с точки зрения стоимости, метод исправления дефектов в программных продуктах. Это подтверждают и эмпирическими исследованиями, однако несмотря на это, большинство программистов не любят проверок и не считают это занятие ни приятным, ни стоящим. В результате о проверках, как правило, забывают (за исключением тех случаев, когда их выполнение требуется официально). Зачастую проверку кода осуществляют неподготовленные к этой задаче программисты.
</P>
<FONT FACE="Arial" SIZE=2><P ALIGN="JUSTIFY">"Несмотря на положительные результаты исследований в течение более 20 лет, процедура проверки кода очень плохо приживается в индустрии производства программных продуктов. Точных данных у нас нет, однако согласно неформальному обзору USENET-групп, 72 из 90 опрошенных программистов практикуют проверку кода крайне редко, или вообще ей не занимаются."
</P>
</FONT><P ALIGN="JUSTIFY">Идея проверки кода базируется на известном постулате: чем раньше обнаружен дефект, тем проще и дешевле его исправить. Существует много исследований на эту тему, в некоторых даже утверждается, что исправление дефекта будет стоить в десять раз дороже на каждой последующей ступени развития проекта.
</P>
<P ALIGN="JUSTIFY">Экспоненциальный рост стоимости дефектов легко объяснить. Во время проверки, программист говорит: "У оператора "if", что на 450 строке кода, должен быть оператор "else"." После этого ему понадобится несколько минут, чтобы быстро исправить эту ошибку на своем компьютере. Если же программный продукт уже находится в эксплуатации, то в один прекрасный день раздается звонок разъяренного клиента: "Новый год на носу, а у меня ни одна касса не работает! Я ни-че-го не могу продать! Вы меня разоряете!"
</P>
<P ALIGN="JUSTIFY">Итак, в первом случае программист имеет дело с ошибкой, на которую ему только что указали. Во втором случае, группа технической поддержки должна потратить время на диагностику проблемы (все кассовые аппараты не работают), затем обратиться к самой системе и определить, где нужно вносить исправления (в какой строке кода не хватает оператора "else"). На этом примере всякий может убедиться - работа группы поддержки, которой надо проанализировать проблему и выявить дефект, стоит гораздо дороже, чем те несколько минут, которые должен затратить программист на исправлении ошибки в своем собственном коде. Если программисты работают парами, то такие проверки кода происходят непрерывно. А непрерыная проверка кода не только опережает спорадические "инспекции" как по качеству, так и по скорости нахождения ошибок, но и не вызывает у программистов отрицательных эмоций.
</P>
<P ALIGN="JUSTIFY">Посмотрите, как сардонически описывает свой опыт программирования в паре с новичком 
опытный программист, который в начале был настроен к идее совместной работы весьма скептически. К своему удивлению, этот специалист вдруг обнаруживает, что даже новичок может существенно улучшить качество кода, который он пишет.
</P>
<FONT FACE="Arial" SIZE=2><P ALIGN="JUSTIFY">Как-то я работал с одним из наименее опытных разработчиков над довольно простой задачей. Честно говоря, я всегда считал себя замечательным специалистом по языку Smalltalk, поэтому был уверен, что просто буду учить молодежь, как надо работать.
</P>
<P ALIGN="JUSTIFY">Не прошло и нескольких минут, как этот малец задает мне вопрос - почему, дескать, я делаю то, что я делаю. И точно, оказалось, что я уже совершил ошибку! Я исправился. Тогда этот бойкий мальчишка напомнил мне правильное название метода или чего-то там еще, что я писал в тот момент неправильно. Вскоре он уже вовсю указывал мне, что я должен делать дальше, а сам успевал подмечать еще и все ошибки в синтаксисе и форматировании. 
</P>
<P ALIGN="JUSTIFY">&#9;[со слов Рона Джеффриза]</P>
</FONT><P ALIGN="JUSTIFY">И наконец, еще одним преимуществом постоянных проверок кода является то, что с их помощью разработчики узнают новые способы и стили кодирования, особенности языка <!-- new coding idioms and language features --> и лучше представляют себе всю систему.</P>
<FONT FACE="Arial" SIZE=2><P ALIGN="JUSTIFY">Непрерывная проверка кода при совместном программировании создает уникальные условия для обучения, поскольку оба программиста постоянно учатся друг у друга. "Проверка кода - это уникальная возможность для обучения: процесс анализа и критики программных артефактов, которые создал кто-то другой, представляет собой замечательный по эффективности способ изучения языков, техники проектирования, предметной области и т.д."
</P>
</FONT><P ALIGN="JUSTIFY">В том же ключе выдержаны и другие высказывания программистов, занимающихся проверкой кода:</P>
<UL>
<P ALIGN="JUSTIFY"><LI>Ошибки обнаруживаются сразу, на момент появления, что позволяет экономить даже на компиляции, не говоря уже о прочих экономических выгодах раннего обнаружения и исправления дефектов.</LI></P>
<P ALIGN="JUSTIFY"><LI>Горазо легче соблюдать стандарты кодирования, если за этим следит сразу две пары глаз.</LI></P>
<P ALIGN="JUSTIFY"><LI>Команда разработчиков учится общению и совместной работе.</LI></P></UL>

<B><P ALIGN="JUSTIFY"><LI>Решение проблем</LI></P>
</B><FONT FACE="Arial" SIZE=2><P ALIGN="JUSTIFY">Было время, когда мы чувствовали, что уже готовы уже все бросить, все, кроме работы "в связке". Когда я был ведущим, я старался описать проблему таким образом, чтобы мой партнер мог как можно лучше вникнуть в ее суть. Затем в бой вступал он и боролся, до тех пор, пока не доходил до мертвой точки... затем у меня появлялась какая-нибудь хорошая идея... и так далее. Наверное, многие назовут этот метод "мозговым штурмом", но у меня остается после него совсем другое ощущение.</P>
<P ALIGN="RIGHT">&#9;[- Дэвид Уагстафф (David Wagstaff), Salt Lake City]</P>
</FONT><P ALIGN="JUSTIFY">Мы называем описанный Дэвидом Уагстаффом эффект <I>парной эстафетой </I>(pair relaying). Работающие парами программисты часто сообщают о том, что благодаря этому методу могут решать проблемы гораздо быстрее, а также о том, что этот метод отличается от таких процессов как улучшение качества дизайна системы, обнаружение ошибок при наборе или проведение "мозгового штурма". Под словами "Решение проблем" мы понимаем ту ситуацию, когда оба программиста озадачены сбоями в работе программы или же просто не могут решить, как им следует разрабатывать ее дальше.
</P>
<P ALIGN="JUSTIFY">Во всех интервью и неформальных разговорах программисты отмечали, что в трудной ситуации прилагают к решению проблем максимум своих возможностей, в результате чего обретают новые знания. Они делятся с партнером своими знаниями и энергией (а также устраивают "мозговой штурм"), и таким образом, шаг за шагом приближаются к решению проблемы.
</P>
<P ALIGN="JUSTIFY">Очень эффективно совмещать технику "мозгового штурма" и парной эстафеты. Один из опытных программистов заметил:</P>
<FONT FACE="Arial" SIZE=2><P ALIGN="JUSTIFY">Когда мне приходится снова работать в одиночку после того, как поработал в паре, мне кажется, что у меня отказала часть мозга. Я чувствую, что начинаю терять уверенность в том, что делаю.</P>
</FONT><B><P ALIGN="JUSTIFY"><LI>Обучение</LI></P>

</B><P ALIGN="JUSTIFY">Партнеры постоянно обмениваются знаниями: от навыков работы с инструментами (вплоть до мышки) до изучения правил языка программирования, определенных способов проектирования и программирования, общего навыка построения дизайна системы.
</P>
<P ALIGN="JUSTIFY">Обучение протекает в режиме "ученичества". Партнеры-программисты попеременно выполняют роли ученика и учителя. При этом они обмениваются даже навыками и привычками, которые невозможно передать на словах.
</P>
<I><P ALIGN="JUSTIFY">Обучение на визуальных примерах и его роль в ученичестве</P>
</I><P ALIGN="JUSTIFY">В этой книге обсуждаются исследования процесса ученичества в разных областях - от портновского дела до профессии сигнальщика во флоте и мясника в современным супермаркете.
</P>
<P ALIGN="JUSTIFY">У книги есть подзаголовок - "периферийное участие в работе на серьезном уровне", который подчервкивает три основных аспекта ученичества: новичок участвует в работе мастера <I>активно</I>; новичку поручают <I>серьезную, ответственную</I> работу и, наконец, что новичок работает на <I>периферии</I>, постоянно приближаясь к более высокому уровню профессионализма. Поначалу новичкам поручается простая (и не самая важная) часть работы. С течением времени его работа приобретает все более ответственный характер.
</P>
<P ALIGN="JUSTIFY">Одно из наиболее интересных замечаний по поводу ученичества, которое делают авторы этой книги, заключается в том, что для успешного обучения ученик должен постоянно находиться в поле зрения учителя, поскольку знание передается частично визуально, частично на слух. Авторы книги дают два примера быстрого обучения - у портных и сигнальщиков (в обоих случаях учителя находятся в поле зрения учеников, так чтобы одни могли наблюдать за работой других). Таким образом новичок может видеть и слышать своего учителя и получать от него непосредственные инструкции.
</P>
<P ALIGN="JUSTIFY">Наибольший интерес для нашей темы представляет пример обучения мясников в супермаркете. Начинающий мясник работает отдельно от профессионалов; ему поручают только самую простую рубку мяса. При этом он не может научиться у старших рубщиков тому, как нужно делать более сложную и тонкую работу, потому что специалисты находятся в другом помещении. Авторы указывают, что эта ситуация - пример невозможности передачи знаний от учителя к ученику.
</P>
<P ALIGN="JUSTIFY">Нужно ясно осознавать, что в большинстве случаев, рабочие условия программистов больше похожи на условия работы мясников, а не портных или сигнальщиков. Очень трудно построить работу программистов таким образом, чтобы новички работали в непосредственной близости от высококлассных специалистов. Как правило, новички сидят в своем собственном помещении и пишут только простой код. "Спецы" находятся в другой комнате, где они решают сложные задачи и занимаются проектированием. Парное программирование позволяет избавиться от этих недостатков и создать среду, благоприятствующую обучению.</P>
<I><P ALIGN="JUSTIFY">Специалист в пределах слышимости (Expert In Earshot)</P>
</I><P ALIGN="JUSTIFY">В результате работы на семинарах, в которых участвовали 10 руководителей проектов, первый автор этой статьи сформулировал еще один паттерн для руководства проектом. Полностью (включая примеры и пояснения) вы найдете его в приложении к этой статье. Вкратце его суть можно описать так:
</P>
<FONT FACE="Arial" SIZE=2><P ALIGN="JUSTIFY">Использовать паттерн <I>Специалист в пределах слышимости (Expert In Earshot)</I> нужно тогда, когда вы замечаете, что программисты-новички, работающие в вашей команде, усваивают новые навыки не так хорошо, как хотелось бы. При этом вы не хотите, чтобы специалист в данном вопросе тратил все свое рабочее время на их обучение. В этом случае нужно поместить специалиста или руководителя команды в то помещение, где работают новички. Таким образом, молодежь будет наглядно обучаться тому, как работает профессионал. Наблюдая и прислушиваясь, новички приобретут манеру (будем надеяться, правильную) работы специалиста. (Понятно, что этого специалиста будут часто отвлекать, поэтому необходимо заранее позаботиться о том, чтобы у него было время и на спокойную, сосредоточенную работу).
</P>
</FONT><P ALIGN="JUSTIFY">Обратите внимание, как этот подход соотносится с исследованиями в области ученичества (см. выше). Важно отметить, что этот паттерн понравился всем 10 руководителям, и они собирались немедленно внедрить его в своих компаниях.
</P>
<P ALIGN="JUSTIFY">Парное программирование представляет собой сочетание паттерна <I>Специалист в пределах слышимости (Expert In Earshot)</I> и принципа периферийного участия ученика в серьезной и ответственной работе (когда он слышит и видит учителя). Следовательно, в случае с парным программированием мы вправе ожидать более значительных результатов, нежели просто обучение владению новым инструментарием или языком программирования. Эти ожидания подтверждаются сообщениями программистов, которые уже приняли на вооружение эту практику.
</P>
<I><P ALIGN="JUSTIFY">Данные статистики</P>
</I><P ALIGN="JUSTIFY">Второй автор этой статьи использовал парное программирование во время преподавания курса web-программирования в университете Юта. Группа студентов состояла из 20 человек, имевших разный опыт программирования. Однако никто из них не знал ни языков web-программирования, ни инструментарий, который для этого используется. Опыт большей части студентов в этой области состоял лишь в применении WYSIWYG редакторов web-страниц. В течении 11 недель занятий студенты на хорошем уровне изучили язык HTML, JavaScript, VBScript, Active Server Page Scripting, Microsoft Access/SQL и некоторые команды ActiveX. Порой им приходилось совмещать операторы всех этих языков в одной программе.
</P>
<P ALIGN="JUSTIFY">Во время обучения эти студенты задавали на удивление мало вопросов своим преподавателям. Когда, в последний день занятий, их спросили о причинах такой независимости, мнения распределились следующим образом:
</P>

<UL>
<P ALIGN="JUSTIFY"><LI>74% написали, что выясняли все вопросы в процессе общения друг с другом.</LI></P>
<P ALIGN="JUSTIFY"><LI>84% согласились с утверждением: "Я смог изучить Active Server Pages быстрее и лучше, так как все время работал вдвоем с партнером".</LI></P></UL>

<P ALIGN="JUSTIFY">Нам кажется, что такими результатами мы обязаны, с одной стороны, более успешному решению проблем при парном программировании (как обсуждалось выше), а с другой - большей возможности для обучения, которая возникает при этом стиле работы.</P>

<B><P ALIGN="JUSTIFY"><LI>Формирование команды&amp;коммуникация</LI></P>
</B><FONT FACE="Arial" SIZE=2><P ALIGN="JUSTIFY">По прибытии я обнаружил удручающую картину: у Билла не было никакой команды разработчиков. У него было шесть талантливых, хорошо подготовленных сотрудников, которые не могли вместе работать. Они даже сидели поодаль друг от друга. Ясно было, что особых симпатий между ними пока не возникло.
</P>
<P ALIGN="JUSTIFY">"Давайте поговорим о парном программировании. (далее перечисляются все его преимущества). &lt;пауза&gt; Парное программирование вводится теперь в обязательном порядке. Весь программный код должен быть написан при участии второго партнера".</P>
<P ALIGN="JUSTIFY">&lt;Неловкое молчание. Люди обмениваются неприязненными взглядами&gt;</P>
<P ALIGN="JUSTIFY">"Не думаю, что это сработает. Вот, например, что будет, если мне нужно писать код, а партнера нет рядом?"</P>
<P ALIGN="JUSTIFY">"Тогда найди кого-нибудь еще. Главная цель - работать вместе, чтобы передавать друг другу знания".
</P>
<P ALIGN="JUSTIFY">"А если рядом никого не окажется?"</P>
<P ALIGN="JUSTIFY">"Тогда позови меня, я с удовольствием с тобой поработаю. Если же ты и в самом деле не можешь найти ни одного партнера, чтобы писать код вместе, тогда отложи клавиатуру и отдохни."</P>
<P ALIGN="JUSTIFY">&lt;Все удивленно смотрят на меня. Гробовая тишина. &gt;</P>
<P ALIGN="JUSTIFY">Несколько раз парное программирование прошло довольно гладко. Иногда, правда, что-то  не получалось. Общались разработчики вяло и редко. Я изо всех сил старался помочь ребятам - старался приучить их думать вслух (то, что Уорд Каннингэм называл рефлективной артикуляцией). И это решило дело! Программисты действительно стали вместе работать, а не просто писать код для одной системы.
</P>
<P ALIGN="JUSTIFY">Уже через неделю я начал подмечать существенные изменения в поведении разработчиков.  Они начали разговаривать друг с другом. Совершенно нормально, так как говорят между собой обычные люди. Нужно было видеть их в начале проекта, чтобы понять, как сильно изменилось их отношение друг к другу. Они беседовали, шутили, смеялись. Теперь уже они начали понимать, что такое доверять друг другу и получать удовольствие от совместной работы.
</P>
<P ALIGN="JUSTIFY">Еще через несколько дней эти разработчики превратились в отличную слаженную команду."</P>
<P ALIGN="RIGHT">[из архивов Алистэра Коуберна]</P>
</FONT><P ALIGN="JUSTIFY">Несмотря на то, что книги "Психология программирования" ("The Psychology of Computer Programming") и "Кадровое обеспечение" ("Peopleware") были написаны, соответственно, 20 и 30 лет тому назад, никто до сих пор не написал ничего лучшего о командной работе. Уже в наши дни формированию команды и коммуникациям стали уделять внимание новые методологии - eXtreme Programming , семейство Crystal [15] и Adaptive Software Engineering [16]. В статье "Characterizing People as Non-Linear, First-Order Components in Software Development" (Русский перевод: <A HREF="http://www.maxkir.com/sd/people_as_nonlinearRUS.htm">"Люди как нелинейные и наиболее важные компоненты в создании программного обеспечения")</A>, Алистэр Коуберн вообще ставит человеческий фактор в деле разработки ПО на первое место, утверждая, что это вовсе не второстепенный вопрос, как принято считать.</P>
<P ALIGN="JUSTIFY">Таким образом, парное программирование выгодно по трем основным причинам.</P>
<P ALIGN="JUSTIFY">Как вы уже поняли из приведенного выше рассказа, люди учатся работать вместе. Во время эксперимента в университете Юта ни одна из 14 пар программистов не столкнулась с непреодолимыми препятствиями психологического толка. Впрочем, со слов тех, кто пытается практиковать парное программирование во время реальной работы над проектом, такие проблемы все же случаются (возможно, сказывается слабое воздействие на программистов или недостаток мотивации к совместной работе). Опросы тех разработчиков, которые сумели преодолеть трудности, показывают, что изложенный выше сценарий срабатывает довольно часто (может быть, разве что не в столь ярко выраженной форме). Зачастую люди могут научиться работать вместе только после того, как начнут это делать.
</P>
<P ALIGN="JUSTIFY">Научиться работать вместе - значит научиться более быстро решать вместе со своими коллегами различные проблемы, а не скрывать друг от друга свои мысли и идеи. В этом случае заметно совершенствуется командный стиль работы.
</P>
<P ALIGN="JUSTIFY">Если пара программистов сумеет сработаться, то им будет гораздо легче общаться. Кроме того, это общение будет протекать гораздо чаще. При увеличении объема и частоты коммуникаций увеличивается и общий поток информации, циркулирующий внутри команды. Чтобы усилить и ускорить этот процесс, нужно не забывать менять партнеров в парах.  
</P>
<P ALIGN="JUSTIFY">Похоже, все это существенно улучшает производительность команды. К сожалению, эти выводы основываются только на рассказах самих программистов. Никаких статистических данных на этот счет у нас пока нет.</P>
<B><P ALIGN="JUSTIFY"><LI>Персонал &amp; Управление проектом</LI></P>
</B><P ALIGN="JUSTIFY">Руководство проектом только выигрывает от улучшения качества работы персонала и уменьшения рисков, которые с ним связаны.
</P>
<P ALIGN="JUSTIFY">И компании, и команде разработчиков выгодна атмосфера постоянного обучения и обмена знаниями. Во время работы над проектом существенно возрастают профессиональные навыки разработчиков - как в области языков программирования, так и в области проектирования.
</P>
<P ALIGN="JUSTIFY">Снижается риск потери ключевых разработчиков, так как многие их коллеги хорошо знают каждую из частей системы. Некоторые называют это "принципом грузовиков": "Сколько разработчиков должен сбить грузовик, чтобы проект не смог нормально завершиться?" Наихудший из возможных ответов: "Одного". Если знания о системе рассредоточены по всей команде разработчиков, это существенно повышает требуемое количество грузовиков, а вместе с ним и уровень безопасности проекта.
</P>
<B><P ALIGN="JUSTIFY"><LI>Заключение</LI></P>



</B><P ALIGN="JUSTIFY">Основные преимущества парного программирования заключаются в следующем:</P>

<UL>
<P ALIGN="JUSTIFY"><LI>большинство ошибок можно обнаружить в процессе кодирования, а не во время тестирования качества (QA) или же во время работы клиента с системой (см. непрерывная проверка кода);</LI></P>
<P ALIGN="JUSTIFY"><LI>заметно снижается общий коэффициент ошибок, что подтверждается статистическими данными (см. непрерывная проверка кода);</LI></P>
<P ALIGN="JUSTIFY"><LI>готовый продукт имеет лучший дизайн и меньший объем программного кода (см. "мозговой штурм" и принцип "парной эстафеты");</LI></P>
<P ALIGN="JUSTIFY"><LI>команда быстрее справляется с возникающими проблемами (см. принцип "парной эстафеты");</LI></P>
<P ALIGN="JUSTIFY"><LI>разработчики гораздо больше узнают как о системе, так и самом процессе разработки ПО (см. обучение в поле зрения учителя);</LI></P>
<P ALIGN="JUSTIFY"><LI>к моменту окончания проекта множество людей обладает глубокими знаниями о каждой из его частей;</LI></P>
<P ALIGN="JUSTIFY"><LI>люди учатся совместной работе и общению, что приводит к увеличению потока информации внутри команды и положительно влияет на ее динамику;</LI></P>
<P ALIGN="JUSTIFY"><LI>люди испытывают больше удовольствия от своей работы.</LI></P></UL>

<P ALIGN="JUSTIFY">При этом увеличение стоимости разработки при парном программировании составляет вовсе не 100%, как можно было бы ожидать, а приблизительно 15%, что легко окупается за счет более высокого качества программного кода (а значит, меньших затрат на тестирование и поддержку).</P>


</OL>


<B><P ALIGN="JUSTIFY">Литература</P>
</B><P ALIGN="JUSTIFY">1.&#9;Salomon, G., Distributed Cognitions: Psychological and educational considerations. Learning in doing: Social, cognitive, and computational perspectives, ed. R. Pea and J.S. Brown. 1993, Cambridge: Cambridge University Press.</P>
<P ALIGN="JUSTIFY">2.&#9;Constantine, L.L., Constantine on Peopleware. Yourdon Press Computing Series, ed. E. Yourdon. 1995, Englewood Cliffs, NJ: Yourdon Press.</P>
<P ALIGN="JUSTIFY">3.&#9;Beck, K., Extreme Programming Explained: Embrace Change. 2000, Reading, Massachusetts: Addison-Wesley.</P>
<P ALIGN="JUSTIFY">4.&#9;Williams, L., et al., Strengthening the Case for Pair-Programming, in IEEE Software. submitted to IEEE Software. Online at www.cs.edu/~lwilliam/Papers/ieeeSoftware.PDF </P>
<P ALIGN="JUSTIFY">5.&#9;Williams, L.A. and R.R. Kessler. The Collaborative Software Process. in International Conference on Software Engineering 2000. submitted for consideration. Limerick, Ireland. Online at www.cs.edu/~lwilliam/Papers/ICSE.pdf</P>
<P ALIGN="JUSTIFY">6.&#9;Nosek, J.T., The Case for Collaborative Programming, in Communications of the ACM. 1998. p. 105-108.</P>
<P ALIGN="JUSTIFY">7.&#9;Humphrey, W.S., A Discipline for Software Engineering. SEI Series in Software Engineering, ed. P. Freeman, Musa, John. 1995: Addison Wesley Longman, Inc.</P>
<P ALIGN="JUSTIFY">8.&#9;Humphrey, W.S., Introduction to the Personal Software Process. 1997: Addison-Wesley.</P>
<P ALIGN="JUSTIFY">9.&#9;Flor, N.V. and E.L. Hutchins. Analyzing Distributed Cognition in Software Teams: A Case Study of Team Programming During Perfective Software Maintenance. in Empirical Studies of Programmers: Fourth Workshop. 1991: Ablex Publishing Corporation.</P>
<P ALIGN="JUSTIFY">10.&#9;Fagan, M.E., Advances in software inspections to reduce errors in program development. IBM Systems Journal, 1976. 15: p. 182-211.</P>
<P ALIGN="JUSTIFY">11.&#9;Johnson, P.M., Reengineering Inspection: The Future of Formal Technical Review, in Communications of the ACM. 1998. p. 49-52.</P>
<P ALIGN="JUSTIFY">12.&#9;Lave, J. and E. Wenger, Situated Learning: Legitimate peripheral participation. 1991, New York, NY: Cambridge University Press.</P>
<P ALIGN="JUSTIFY">13.&#9;Weinberg, G.M., The Psychology of Computer Programming Silver Anniversary Edition. 1998, New York: Dorset House Publishing.</P>
<P ALIGN="JUSTIFY">14.&#9;DeMarco, T. and T. Lister, Peopleware. 1977, New York: Dorset House Publishers. </P>
<P ALIGN="JUSTIFY">15.&#9;Cockburn, A., Crystal "Clear": A human-powered software development methodology for small teams, Addison-Wesley, 2001, in preparation. Online at http://members.aol.com/humansandt/crystal/clear</P>
<P ALIGN="JUSTIFY">16.&#9;Highsmith, J., Adaptive Software Development, Dorset House, 1999.</P>
<P ALIGN="JUSTIFY">17.&#9;Cockburn, A., Characterizing People as Non-Linear, First-Order Components in Software Development, in International Conference on Software Engineering 2000. submitted for consideration. Limerick, Ireland.. Online as Humans and Technology Technical Report, TR 99.05, http://members.aol.com/humansandt/ papers/ nonlinear/nonlinear.htm.&#9 (На русском языке: <A HREF="http://www.maxkir.com/sd/people_as_nonlinearRUS.htm">"Люди как нелинейные и наиболее важные компоненты в создании программного обеспечения"</A>);</P>

<B><P ALIGN="JUSTIFY">Приложение: <I>"Специалист в пределах слышимости"(Expert In Earshot)</I> Паттерн управления проектом</P>
</B><FONT SIZE=2><P ALIGN="JUSTIFY">(полную версию смотрите на    http://c2.com/cgi/wiki?ExpertInEarshot)</P></FONT>
<TABLE CELLSPACING=0 BORDER=0 CELLPADDING=7 WIDTH=686>
<TR><TD WIDTH="12%" VALIGN="TOP">
<P ALIGN="JUSTIFY"><B><FONT SIZE=2>Суть</B></FONT></TD>
<TD WIDTH="88%" VALIGN="TOP">
<FONT SIZE=2><P ALIGN="JUSTIFY">Неопытным программистам довольно сложно самостоятельно научиться хорошо работать, поэтому...&#9;<BR>
Около них (в пределах слышимости) должен находиться высококлассный специалист в данной области.</FONT></TD>
</TR>
<TR><TD WIDTH="12%" VALIGN="TOP">
<B><FONT SIZE=2><P ALIGN="JUSTIFY">Показания</B></FONT></TD>
<TD WIDTH="88%" VALIGN="TOP">
<FONT SIZE=2><P ALIGN="JUSTIFY">(1) Новички плохо обучаются и медленно осваивают новые технологические приемы работы.&#9;<BR>
(2) Все работают над одним проектом, но несмотря на это, специалисты сидят в отдельном помещении, а новички собраны в общей комнате.</FONT></TD>
</TR>
<TR><TD WIDTH="12%" VALIGN="TOP">
<B><FONT SIZE=2><P ALIGN="JUSTIFY">Противопоказания</B></FONT></TD>
<TD WIDTH="88%" VALIGN="TOP">
<FONT SIZE=2><P ALIGN="JUSTIFY">(1) Согласно правилам, размещение специалистов и новичков в одной комнате запрещено. &#9;<BR>
(2) Специалист некоммуникабелен или же имеет некоторые особенности и привычки, которые вы категорически не хотите видеть ни у кого другого.<BR>
(3) Специалист расходует большую часть своего времени на деятельность, которая помешает работе новичков (например, разговаривает по телефону на отвлеченные темы и т.д.)</FONT></TD>
</TR>
<TR><TD WIDTH="12%" VALIGN="TOP">
<B><FONT SIZE=2><P ALIGN="JUSTIFY">Цели и задачи</B></FONT></TD>
<TD WIDTH="88%" VALIGN="TOP">
<FONT SIZE=2><P ALIGN="JUSTIFY">(1) Вам нужно, чтобы все делали свою работу - и новички, и опытные специалисты.&#9;<BR>
(2) Вы хотите, чтобы новички обучались, и считаете, что у ваших специалистов есть чему поучиться.&#9;<BR>
(3) Вы можете позволить себе выделить часть времени специалистов на то, чтобы они уделяли внимание новичкам (если конечно, те при этом учатся работать).<BR>
Но при этом...<BR>
(1) Вы не хотите, чтобы специалисты посвящали все свое рабочее время преподаванию.&#9;<BR>
(2) Люди всегда стесняются беспокоить начальника (или специалиста) телефонным звонком или стуком в дверь.</FONT></TD>
</TR>
<TR><TD WIDTH="12%" VALIGN="TOP">
<B><FONT SIZE=2><P ALIGN="JUSTIFY">Сделайте следующее</B></FONT></TD>
<TD WIDTH="88%" VALIGN="TOP">
<FONT SIZE=2><P ALIGN="JUSTIFY">Пусть специалист (или начальник) работает в одной комнате с новичками, тогда они смогут перенимать его опыт просто наблюдая и прислушиваясь к тому, что он делает. Специалист же будет продолжать заниматься своей обычной работой.</FONT></TD>
</TR>
<TR><TD WIDTH="12%" VALIGN="TOP">
<B><FONT SIZE=2><P ALIGN="JUSTIFY">Таким образом</B></FONT></TD>
<TD WIDTH="88%" VALIGN="TOP">
<FONT SIZE=2><P ALIGN="JUSTIFY">(1) Новички будут перенимать у специалиста опыт и технологию (будем надеяться, правильную) &#9;<BR>
(2) Специалист будет чувствовать себя менее комфортно, так как его будут чаще отвлекать от работы. Поэтому вам нужно заранее позаботиться, чтобы у него было свое личное время, когда он сможет спокойно сосредоточиться на своей работе. &#9;<BR>
(3) Вам и специалисту нужно будет следить за тем, чтобы новички не начали просто перекладывать свои проблемы на чужие плечи. &#9;<BR>
(4) У вам будет больше людей в одной комнате.</FONT></TD>
</TR>
<TR><TD WIDTH="12%" VALIGN="TOP">
<B><FONT SIZE=2><P ALIGN="JUSTIFY">Эффект передозировки</B></FONT></TD>
<TD WIDTH="88%" VALIGN="TOP">
<FONT SIZE=2><P ALIGN="JUSTIFY">(1) Чрезмерное обилие вопросов существенно снизит производительность специалиста. &#9;<BR>
(2) Если в одной комнате собрать слишком много переговаривающихся между собой людей, в такой обстановке будет трудно сконцентрироваться.</FONT></TD>
</TR>
<TR><TD WIDTH="12%" VALIGN="TOP">
<U><FONT SIZE=2><P ALIGN="JUSTIFY">См. также</U></FONT></TD>
<TD WIDTH="88%" VALIGN="TOP">
<I><FONT SIZE=2><P ALIGN="JUSTIFY">Паттерн "Обучение:Дневная няня" (Training:Day Care)</I> предлагает следующее: "Если ваши специалисты проводят слишком много времени за обучением новичков, то .... каждый день назначайте одного "ответственного" за всех новичков, а остальные спецы будут в это время спокойно работать. [CoSOOP]. Это может также быть решением в ситуации, когда специалист пытается обучать новичков во время проектирования системы. В паттерне "Специалист в пределах слышимости" (Expert In Earshot), профессионалы не отвечают за обучение новичков. В этой ситуации само окружение позволяет новичку получать необходимые знания, наблюдая за тем, как работает специалист. </P>
<P ALIGN="JUSTIFY">Паттерн "Парное программирование" (Pair Programming) не противоречит принципам паттерна "Специалист в пределах слышимости". Таким образом, специалист оказывается в пределах слышимости только своего партнера-новичка (если они работают в одной паре), или же всех остальных коллег, которые работают с ним в одном помещении.
</FONT></TD>
</TR>
<TR><TD WIDTH="12%" VALIGN="TOP">
<U><FONT SIZE=2><P ALIGN="JUSTIFY">Примеры</U></FONT></TD>
<TD WIDTH="88%" VALIGN="TOP">
<FONT SIZE=2><P ALIGN="JUSTIFY">(1) Когда Томас Дж. Уотсон Младший, бывший главный администратор компании IBM, сменил жизнь авиатора и плэйбоя на карьеру в серьезном бизнесе, его отец, исполнявший тогда обязанности главного администратора в этой компании, распорядился, чтобы тот провел полгода, сидя сбоку у стола одного из старших руководителей. Целых шесть месяцев единственным занятием молодого человека было смотреть и слушать, как этот высококлассный профессионал выполнял свою ежедневную работу, как он общался с людьми и т.д. Это несколько необычный, но зато очень яркий пример паттерна "Специалист в пределах слышимости".</P>
<P ALIGN="JUSTIFY">(2) Одному опытному программисту поручили команду из четырех новичков, для того чтобы они разработали графическую рабочую станцию. При этом для руководителя команды выделили отдельный офис. Через несколько недель он почувствовал, что работать отдельно от своей команды ему неудобно, поэтому он перенес свой стол в комнату, где работали четыре его младших программиста. Несмотря на то, что они постоянно его отвлекали (хотя он вовсе не собирался становиться для них штатным преподавателем), работа пошла успешнее, поскольку он мог в любой момент обсудить со своими разработчиками любой вопрос. Постепенно они приобрели необходимое мастерство и уже не так сильно мешали ему своими расспросами. К следующему проекту эта команда уже обладала всеми необходимыми навыками и умениями.</P>
<P ALIGN="JUSTIFY">(3) Старший программист работал в одной комнате с шестью новичками. У этого специалиста были две не очень хорошие привычки: во-первых, он не принимал всерьез идею правильного и аккуратного дизайна системы и, во-вторых, вместо того, чтобы объяснять своим неопытным коллегам, что такое хороший дизайн или программа, он просто по ночам переписывал их код. Утром, приходя на работу, эти шестеро никогда не знали, осталась ли программа в прежнем виде или изменилась, и насколько. Через несколько месяцев все новички стали создавать не только плохой, но и неряшливый дизайн. Их идеалом стало высокомерное отношение к проектированию старшего программиста. &#9;<BR>
Когда этот человек перестал работать над проектом, на его место пришел другой консультант. Теперь проектные решения всесторонне обсуждались, так чтобы все могли при желании услышать, о чем идет речь. Через несколько месяцев трое новичков начали рассуждать о проектировании и строить диаграммы, и вскоре овладели этим искусством так же хорошо, как и программированием.</FONT></TD>
</TR>
</TABLE>
<hr>
        <DIV class="copyright">
&copy; <small>Copyright 2000-2002, Alistair Cockburn ("Humans and Technology" Technical Report)</small>
<br>
&copy; <small>Copyright <a href="mailto:kirsa@maxkir.com">maxkir.com</a>, перевод, 2002</small>
    	</DIV>
<hr>


<P ALIGN="JUSTIFY">
Глоссарий используемых терминов:<BR>
<A HREF="/wiki/index.php/CodeReview">code review</a> = проверка кода<BR>
<A HREF="/wiki/index.php/DistributedCognition">distributed cognition</a> = распределенное знание<BR>
<A HREF="/wiki/index.php/FieldSupport">field support</a> = поддержка продукта, уже находящегося в эксплуатации <BR>
<A HREF="/wiki/index.php/PairProgramming">pair programming</A> = парное программирование</I><BR>
<A HREF="/wiki/index.php/PairRelaying">pair relaying</a> = парная эстафета
</P>
<hr>
<P>
<B><I>Послесловие переводчиков</I></B>:<BR>
Опыт освоения парного программирования в отечественной софтверной компании описан в статье Романа Еремина <A HREF="http://www.xprogramming.ru/Articles/WorkingInPairs.html
">"Наш опыт внедрения парного программирования"</A>
</P>
<br />
<b>Warning</b>:  main(gb.php.inc) [<a href='function.main'>function.main</a>]: failed to open stream: No such file or directory in <b>/home/maxkir/public_html/maxkir/sd/pairprog_RUS.htm</b> on line <b>394</b><br />
<br />
<b>Fatal error</b>:  main() [<a href='function.require'>function.require</a>]: Failed opening required 'gb.php.inc' (include_path='.:../include') in <b>/home/maxkir/public_html/maxkir/sd/pairprog_RUS.htm</b> on line <b>394</b><br />

------------XgoCLl6DMTLuPXdwO56uVX
Content-Disposition: inline; filename=Image640.gif
Content-Type: image/gif; name=Image640.gif
Content-Location: http://www.maxkir.com/sd/img/Image640.gif
Content-Transfer-Encoding: Base64

R0lGODdhQAHFAPcAAAAAAJkzZoCAgJmZ/8DAwMjg2AAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAACH5BAAAAAAALAAAAABAAcUAQAj/AAEIHEiwoMGDCBMqXMiw
ocOHECNKnEixosWLGDMCKMCxo8ePIEOKHEmypMmTKFOqXMmypcuXMGPKFMlwpk2O
AnFuDJkTZM+XP296zBk0ZVGeO40mLXlUZVOhUGkujEq1qtWrWLNq3apTIdevW5sS
1Fmg58CuP8eWPbt2o9q3bNWCnWu1Jt27ePPq3XvVLt+/gAMLBux3sOHDiBPPLCw1
Kdu2PtM6Vky5smWgUw0DIMC5s+fPoEOLHk26tOnTqFOrXs26tevXpQU0Tmgy6NLJ
HSfvdFsbtu/fwIMLH068uGjZSL1qNi4aQIDn0KNLnx5gM/Pr2LNrPz4bYW3cZcPj
/xyaWzxvpts5O6fOfrr19KvXt59fHT5r+fTZv0eNPLLywfuZBsAABBZo4IEIDoBf
fu5hN2CCECK4IIPRBUjcgxFmqCCF+q3W30eM1QZieSSGt5t4JFlIGoYaQjghh/Vd
x2KLEsLYoIw0RvgihyqS9uFQmQGo2ow5FrgjhT0GR2SRG9pYoYNM1ugkdElylxxt
MIGH4m7noZfakkUeyWCVv4GZo5j5kembmTSiSZ+an/2YW5CX1WnnnXqFiKduJ47H
5Vrj+XneUoHWVZ5Zh5KFqKDm0WQoo1ua51afJg4amU164qnpppzelGmnoIYqaop0
jlqiqag+WlepqDp2oJYmJv9aaKx+KhrpoF3mimJu0hGKm6VaEnorrZXWCqluhU6a
rE9YfRqqsKlGi2mzGlVr7bXYZqvtttx26+234IYr7rjklouttOima6ezdBH1J5CA
uquosk+RNa+98p4kGaDxQtvvvf/Km+/A9Co7J79tCWubu+/Wexe76kYsMV4QT+yS
WQYLXDC/BCOsMb4Gc+yvxVmySvLJKFP7X8ostwxVxS7HLDOpK6e4bLCnFusfAAL0
7PPPQAct9NBEF2300UgnrfTSTDft9NNQH93dQYfBad/VWGetdWtyouWdiMziPKul
NMHn5nxWb6322sJ1nfDXQqZ3dntps2333R5ObZC+Jeoa2jd5lPo0ZJSvTkkllIQb
afhzdd+XuOKLN+7/Nsxz1c1mi3N3iOPjTRreeHycdz6l5HoXtBKyY59KNk+Dc545
dZ+3/vjrNzJ3uYa095r3lXALZnnouT+5+eyLx2g78MWTzjvVMT3G5W0HjzRyp9Nz
Wv2m/lI+8/bba4+Yr0A6xttt4weqcLMjzik+sfE2uqvpVYGv/sFdtt+nrw47ZTL3
/Pf/NvP+C2D/vLcuAUrses3bn6jEB7/5LQsygCMRUSJlPlxJin1eK4r83icWyZzo
T+Nj4NhC2JURQguBJatZq8zFwha6sHdUeaEMZ0jDGtrwhjjMoQ53yEMVGvCHKSMg
EIc4KiES8YjWU+DDQMjEC2IsYO+CF8CeSMUT/66vivaaYsY29rF/tc+L93oiiK7Y
xfxVTontIqMY4SIyBlqRfg17XhT9Ez2MaXCLXmsjyOICl3w5MGFIkaLHHkMYNCLx
kAs0JBDlcqkOygSFiKQZliKJsDpuDJBYBCMm4zhIMy5SkZQMZZ2MKMpS+g6Upkyl
ZlCpylb+hZSujOVXYCnLWqpskrbM5StRqSux0ap+ugzm//bGFPIY632qcx/r8MbM
ZjrTOJNj5SyfSc1qWlM10fQhX2J3zW56M2vZxKX01Ecp6FVwV9IzW/K+yU5nhhOG
jvqj80rYt+lxszXBO1w792m3dwLQd+qMHD8HqjZ/EjNu28kn46qJEYauEy+bpWPk
OG+WzHMi8J73eegzFWo8Z3JUeTuDJ0/CJ096JsueskvcRxFHPIEOT6Ua5f9PRAkZ
mN+5LqbFuV2GVvpSwvE0NQZtoFLsSMcsVs+mLfUcS2Hq0uPdtKkyXd5BWeK3Bx7K
ihNBXuS6pVXPcfWpXoVIUCVKmJT6FKcX6urolnpWqJ5mrDQt65fU6iSMCoiuNrJr
aXSqI7TGZqaetFnqjAXMZaKGry7yq3AQm6CfGoexUlIqRKUq1Jb4EnqBS1+qIFnA
aGVPmsIMrVBoKdrSUhW0mslZXzhrWdXGz7XTmlVfYHs61AJIs6gjFuoyi86obDC3
VSXb+WZrzGEdc7eypa3+tIkuslIvrs8NLFdIa9rq6su21s3udZmr3e5eDLveDW/4
xNkq8eaFtaflLqj/3EhIWIFtonx7Lzlpil7cjvSEQGneLUVaxNy8Kme9dBRwG/VB
Wem2twvaYKxWZ87ilm/AAyasgV1b3+WS11QVNu9i9vvPzWr4YRye6odHzJQemvjE
KE6xilfM4ha7+MUwjrGMZ0zjGtt4hyTOcYnVq+MRU7fHof0xkIMpZEw5N4vpk24G
K2nkCpvRj4JEMqm+e2TLFHkxcVwjw7gox0DOC4BsvNSXPYi/t80Xim3sGAQXlmYv
c2yPGV4Vj8ECv73ZEY8aI+u+tPy/KWuxz3D888c6pmUo5/mzcLykkrVy5Uc2Ec1q
5qOUBykyQSOaz2K0tBYfTehLOjDT0SuhpJm8EZdGD1mWpj61K1OtalWyutWm/3x1
xEANL0eWzLqyTtdRsDhBL3ZagngEI60PmevmKqyJg+Z0yMr4aHKKsti6dp6k72xm
tCA5zGG29rPBC2tdQrvbxOY2uGv57XETsdzm/uSc0y1adLNbgO5+t//iLW/+0bve
3RM3vre97n2TW9/+jiS7IFzRX/Y24CSjXIAH60SEu6xi4KkqBSVcNoJa/OLYgWv+
6uxBYDfYYXrFuMhHzhmNx7kvJE+5yncX0g7LdeUwjzloTF41mdvc5jSXbx+L6jEv
3fznKc/5OGF1WQL3Rm4XAbrSfQTYi9634ODrILmSd+OqW0TogjUuMlPH29wEVLJL
D7tnsF7Tr69V7GgnAJDZX64dx6Zd6Wt/pdnr+naxx32bc89r3dXW0Mm2XMTxNGlc
pa3csuQdRiG3nWLt5nbT3N3AEaYoBg3b9sWzrfF4wzzTKVtlB0Pe84DD6riorkPS
59D0Dnk86A/8N1mNDKlMBftj8Yp4tkZJ86NR/XnNenvLl4n2PLI9k3Bvpb9Xlu13
BevZnZrU5c9e+XT3+xj/+01n3g/f92sCPpKEHybsx6npNZ8r9PXe0967Na3jr730
x8vfrE/cuIUVnPibH33mx975OdX+mFg+/QtL0qoU1Gs+dxqQVTjnNxwFaCDE93vp
F3zrN18uZxTvhzNdhxPW130HuFj6lybcdybeN3bgV1siVEEfh1Lzd3/193z0R372
11ay91YhiFAEuIFv0oFt8oGukYCQ84KOF4MAdYIuiH/ot4Lq14Lmx4N/xXnQhXdA
eIRCiIA0iDY2iDk4WHI+SGU8lxYDmHxE6IBGeH0ZqCRRSDf8x34R6BRQZ3RbuFdj
qDlfiIFIqIENuH0PmEGAdzppGHpKaHV8SGO6914f/xdBB5dcCyQtJ/c9V+hwwnRv
iogyjNiICQdwkKhu/rcuS6gq8XOJMbRoIniIy9VklThKifI89PNLiCJR8Tdaoyh4
D0ZPk1Ivnhh45QNB9iMpH3SJnviIoGhVC2dt98Msq7UoWlc/Y/GLwJiJwkhwzmaM
x5hCoXgZv+V6ftNrvBWL8MWLDWdR5qNZmDhxFvQrwrV6zth+s2aI5lhI1DeJoaSL
6qgu7NiOxpaO8Bhu8jiPR/SO9rhC9ZiPlEiO/EhJ+LiJfTiQGBFix4dh/8iNAvmM
1JOQxYWMDGk9Q0VVxYRfD3mN36GJGSlgI3Ux+hWMEYk9/qWAAAZIJiUoe3ZgIGwU
gMLIKxViXw9EX8lBWKc4grjyiq5oix0pZyGpKa5CkrLVS4zUi8ByXCwpgC5JJdzY
ihN4jLNYjJ9HPtQ4YU9hjYmIkDjxX60XeSppK5JHjd/oE72ikBFXkkb5lBkzjF4Z
ecPFk/7YkA5JiKMuJYmpFZeD6Cl0eVt2aZV7yJe+Y5d3CYpvCZj9eIaEeY8EmZiK
uZiM2ZiO6S0BAQA7
------------XgoCLl6DMTLuPXdwO56uVX
Content-Disposition: inline; filename=Image650.gif
Content-Type: image/gif; name=Image650.gif
Content-Location: http://www.maxkir.com/sd/img/Image650.gif
Content-Transfer-Encoding: Base64

R0lGODdhQAHFAPcAAAAAAJkzZoCAgJmZ/8DAwMjg2AAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAACH5BAAAAAAALAAAAABAAcUAQAj/AAEIHEiwoMGDCBMqXMiw
ocOHECNKnEixosWLGDMCKMCxo8ePIEOKHEmypMmTKFOqXMmypcuXMGPKFMlwpkyB
HHGi1NlRJ0+WP22SDJpzo0qiPo0KLcp0aU+lTlfWjEq1qkuiVrNq3cq15NSuYMOK
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
KrqiLBpEAQEAOw==

------------XgoCLl6DMTLuPXdwO56uVX
Content-Disposition: inline; filename=Image660.gif
Content-Type: image/gif; name=Image660.gif
Content-Location: http://www.maxkir.com/sd/img/Image660.gif
Content-Transfer-Encoding: Base64

R0lGODlhTAHNAPcAAAQCBISChERGdDQ+PGRmrFQaPLTCvISC1Gx6dHwqVFRSjHRy
xIyK7BweHGQiRGxutJQuZFxalJSW9EQWLJSinExOhISG5Hx6zFRaVPz+/IQqXGwm
TISWlExKfGxqtFQePLzSzISC3GRipFRWlJSS9CQqLGxuvFxanJSW/EwWNHx+1AwO
DHyGhExKdERKTGxqrIQqVFRWjHR2xIyO7EwaNGwiRJQyZEwWLKS2tFRShIyK5Hx+
zFxmZIwuXHQmTFwePMze3ISG3GRmpHRyvFxenJya/BIA+QAAd/AAGOsAABIAAAAA
ADoAAHYAAEsAAAAAANMBAP8AAP8AAP8AAAD0AADqAAASAAAAAEgBvJ4A60kAEgAA
AGyjKO9zABLhCQB3AC3cAADqAAASAAAAABxjsOwAPhIA4QAAd/BLJOs6AxIADgAA
AHWES2sAOugAXHcAcADsdQBNYgDhbAB3aUskEZwDAQAOAAAAAIgUkK4A3vgAE3cA
AP9kkP8E3v8BE/8KAAAAUuoALhIAQwAAT+8AAGcA0OgAE3cAAACeAAAC0BMAEwAA
AAABAAAAAAAAAAAAAPAUB4gAABgAAAAAABYUGAAA7AAAEsAAALBkAI4EABMBAAAK
AAAUAADrAAASAAAAAH6QAABzAADoAMB3AAAAAAAAAAAAAAAAAP8Aqv8Aqf8A6P8A
d/+wLf+OAP8TAP8AAAB0/wCV/wDo/wB3/wDMLQBzAADoAAB3AAA0bADr7wASEgAA
AABzAACVABPoAAB3AGQAPAAA7AAAEgAAAAB1ro5rdRPoSQB3AOQAHMQA7OgAEncA
ABZLOwCcdgAAS8AAAAE4UOrs7BISEgAAAACeAAFrAADoAAB3AKSUsem17BJLEgAA
AGCY0fu1/xJL/wAAf2BzhPuV7BLoEgB3ANs0dYDra/sS6HcAd4gAAK4AAPgAAHcA
AP+wdf+Fa/9L6P8Ad+AAkOoA3hIAEwAAAISAgykWwelcQ3cAAAAAhAAA7BMAEgAA
AABjhAAA7AAcEgAAACH5BAAAAAAALAAAAABMAc0ABwj/AAEAWDGQ4AqDCAsqPLgw
IcOHDiM2nAiRosSKGC9qtMgxY8eNHkOCHPmxpEiTJE+qTElSIJCXMGPKnEmzps2b
OHPq3Mmzp8+fQIMKHUq0qNGZAI4qXcq0qdOnUKNKPZp0qtWrWLNq3cp1Z9WuYMOK
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
------------XgoCLl6DMTLuPXdwO56uVX
Content-Disposition: inline; filename=Image670.gif
Content-Type: image/gif; name=Image670.gif
Content-Location: http://www.maxkir.com/sd/img/Image670.gif
Content-Transfer-Encoding: Base64

R0lGODdhSQHKAPcAAAAAAJkzZoCAgJmZ/8DAwMjg2AAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAACH5BAAAAAAALAAAAABJAcoAQAj/AAEIHEiwoMGDCBMqXMiw
ocOHECNKnEixosWLGDMqLMCxo8ePIEOKHEmypMmTKFOqXMmypcuXMGPKXMlwps2b
OFMKzEly50efPnsC4Em0qNECNY8qXcq0qdOnUFUmjUq1qtWrWLNOzcq1q9evYEtu
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

------------XgoCLl6DMTLuPXdwO56uVX--
